Шаблон: Декоратор (Decorator)
Цель:
    Динамическое добавление новых обязанностей объекту
Использование:
    Используется в качестве альтернативы порождению подклассов для расширения функциональности
Пример:
    Динамическое и понятное клиентам добавления обязанностей объектам
    Реализация обязанностей, которые могут быть сняты с объекта
    Расширение класса путем порождения подклассов невозможно по каким-либо причинам