При работе с дженериками есть одна очень важная особенность, о которой необходимо помнить. Она называется “стирание типов” (type erasure).
Ее суть заключается в том, что внутри класса не хранится никакой информации о его типе-параметре.
Эта информация доступна только на этапе компиляции и стирается (становится недоступной) в runtime.
Если ты попытаешься положить объект не того типа в свой List<String>, компилятор выдаст ошибку. Этого как раз и добивались создатели языка, создавая дженерики — проверки на этапе компиляции.
Но когда весь написанный тобой Java-код превратится в байт-код, в нем не будет информации о типах-параметрах.
Внутри байт-кода твой список List<Cat> cats не будет отличаться от List<String> strings. В байт-коде ничто не будет говорить о том, что cats — это список объектов Cat. Информация об этом сотрется во время компиляции, и в байт код попадет только информация о том, что у тебя в программе есть некий список List<Object> cats.